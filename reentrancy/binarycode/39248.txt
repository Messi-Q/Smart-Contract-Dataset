digraph "graph.cfg.gv" {
	subgraph global {
		node [fontname=Courier fontsize=30.0 rank=same shape=box]
		block_0 [label="0: PUSH1 0x80\l2: PUSH1 0x40\l4: MSTORE \l5: PUSH1 0x4\l7: CALLDATASIZE \l8: LT \l9: PUSH2 0x4c\lc: JUMPI \l"]
		block_d [label="d: PUSH1 0x0\lf: CALLDATALOAD \l10: PUSH29 0x100000000000000000000000000000000000000000000000000000000\l2e: SWAP1 \l2f: DIV \l30: PUSH4 0xffffffff\l35: AND \l36: DUP1 \l37: PUSH4 0x13cf08b\l3c: EQ \l3d: PUSH2 0x51\l40: JUMPI \l"]
		block_41 [label="41: DUP1 \l42: PUSH4 0x237e9492\l47: EQ \l48: PUSH2 0xda\l4b: JUMPI \l"]
		block_4c [label="4c: JUMPDEST \l4d: PUSH1 0x0\l4f: DUP1 \l50: REVERT \l"]
		block_51 [label="51: JUMPDEST \l52: CALLVALUE \l53: DUP1 \l54: ISZERO \l55: PUSH2 0x5d\l58: JUMPI \l"]
		block_59 [label="59: PUSH1 0x0\l5b: DUP1 \l5c: REVERT \l"]
		block_5d [label="5d: JUMPDEST \l5e: POP \l5f: PUSH2 0x7c\l62: PUSH1 0x4\l64: DUP1 \l65: CALLDATASIZE \l66: SUB \l67: DUP2 \l68: ADD \l69: SWAP1 \l6a: DUP1 \l6b: DUP1 \l6c: CALLDATALOAD \l6d: SWAP1 \l6e: PUSH1 0x20\l70: ADD \l71: SWAP1 \l72: SWAP3 \l73: SWAP2 \l74: SWAP1 \l75: POP \l76: POP \l77: POP \l78: PUSH2 0x14d\l7b: JUMP \l"]
		block_7c [label="7c: JUMPDEST \l7d: PUSH1 0x40\l7f: MLOAD \l80: DUP1 \l81: DUP5 \l82: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l97: AND \l98: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\lad: AND \lae: DUP2 \laf: MSTORE \lb0: PUSH1 0x20\lb2: ADD \lb3: DUP4 \lb4: DUP2 \lb5: MSTORE \lb6: PUSH1 0x20\lb8: ADD \lb9: DUP3 \lba: PUSH1 0x0\lbc: DUP2 \lbd: GT \lbe: ISZERO \lbf: PUSH2 0xc4\lc2: JUMPI \l"]
		block_c3 [label="c3: INVALID \l"]
		block_c4 [label="c4: JUMPDEST \lc5: PUSH1 0xff\lc7: AND \lc8: DUP2 \lc9: MSTORE \lca: PUSH1 0x20\lcc: ADD \lcd: SWAP4 \lce: POP \lcf: POP \ld0: POP \ld1: POP \ld2: PUSH1 0x40\ld4: MLOAD \ld5: DUP1 \ld6: SWAP2 \ld7: SUB \ld8: SWAP1 \ld9: RETURN \l"]
		block_da [label="da: JUMPDEST \ldb: CALLVALUE \ldc: DUP1 \ldd: ISZERO \lde: PUSH2 0xe6\le1: JUMPI \l"]
		block_e2 [label="e2: PUSH1 0x0\le4: DUP1 \le5: REVERT \l"]
		block_e6 [label="e6: JUMPDEST \le7: POP \le8: PUSH2 0x14b\leb: PUSH1 0x4\led: DUP1 \lee: CALLDATASIZE \lef: SUB \lf0: DUP2 \lf1: ADD \lf2: SWAP1 \lf3: DUP1 \lf4: DUP1 \lf5: CALLDATALOAD \lf6: SWAP1 \lf7: PUSH1 0x20\lf9: ADD \lfa: SWAP1 \lfb: SWAP3 \lfc: SWAP2 \lfd: SWAP1 \lfe: DUP1 \lff: CALLDATALOAD \l100: SWAP1 \l101: PUSH1 0x20\l103: ADD \l104: SWAP1 \l105: DUP3 \l106: ADD \l107: DUP1 \l108: CALLDATALOAD \l109: SWAP1 \l10a: PUSH1 0x20\l10c: ADD \l10d: SWAP1 \l10e: DUP1 \l10f: DUP1 \l110: PUSH1 0x1f\l112: ADD \l113: PUSH1 0x20\l115: DUP1 \l116: SWAP2 \l117: DIV \l118: MUL \l119: PUSH1 0x20\l11b: ADD \l11c: PUSH1 0x40\l11e: MLOAD \l11f: SWAP1 \l120: DUP2 \l121: ADD \l122: PUSH1 0x40\l124: MSTORE \l125: DUP1 \l126: SWAP4 \l127: SWAP3 \l128: SWAP2 \l129: SWAP1 \l12a: DUP2 \l12b: DUP2 \l12c: MSTORE \l12d: PUSH1 0x20\l12f: ADD \l130: DUP4 \l131: DUP4 \l132: DUP1 \l133: DUP3 \l134: DUP5 \l135: CALLDATACOPY \l136: DUP3 \l137: ADD \l138: SWAP2 \l139: POP \l13a: POP \l13b: POP \l13c: POP \l13d: POP \l13e: POP \l13f: SWAP2 \l140: SWAP3 \l141: SWAP2 \l142: SWAP3 \l143: SWAP1 \l144: POP \l145: POP \l146: POP \l147: PUSH2 0x1b3\l14a: JUMP \l"]
		block_14b [label="14b: JUMPDEST \l14c: STOP \l"]
		block_14d [label="14d: JUMPDEST \l14e: PUSH1 0x0\l150: DUP2 \l151: DUP2 \l152: SLOAD \l153: DUP2 \l154: LT \l155: ISZERO \l156: ISZERO \l157: PUSH2 0x15c\l15a: JUMPI \l"]
		block_15b [label="15b: INVALID \l"]
		block_15c [label="15c: JUMPDEST \l15d: SWAP1 \l15e: PUSH1 0x0\l160: MSTORE \l161: PUSH1 0x20\l163: PUSH1 0x0\l165: SHA3 \l166: SWAP1 \l167: PUSH1 0x3\l169: MUL \l16a: ADD \l16b: PUSH1 0x0\l16d: SWAP2 \l16e: POP \l16f: SWAP1 \l170: POP \l171: DUP1 \l172: PUSH1 0x0\l174: ADD \l175: PUSH1 0x0\l177: SWAP1 \l178: SLOAD \l179: SWAP1 \l17a: PUSH2 0x100\l17d: EXP \l17e: SWAP1 \l17f: DIV \l180: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l195: AND \l196: SWAP1 \l197: DUP1 \l198: PUSH1 0x1\l19a: ADD \l19b: SLOAD \l19c: SWAP1 \l19d: DUP1 \l19e: PUSH1 0x2\l1a0: ADD \l1a1: PUSH1 0x0\l1a3: SWAP1 \l1a4: SLOAD \l1a5: SWAP1 \l1a6: PUSH2 0x100\l1a9: EXP \l1aa: SWAP1 \l1ab: DIV \l1ac: PUSH1 0xff\l1ae: AND \l1af: SWAP1 \l1b0: POP \l1b1: DUP4 \l1b2: JUMP \l"]
		block_1b3 [label="1b3: JUMPDEST \l1b4: PUSH1 0x0\l1b6: DUP1 \l1b7: DUP4 \l1b8: DUP2 \l1b9: SLOAD \l1ba: DUP2 \l1bb: LT \l1bc: ISZERO \l1bd: ISZERO \l1be: PUSH2 0x1c3\l1c1: JUMPI \l"]
		block_1c2 [label="1c2: INVALID \l"]
		block_1c3 [label="1c3: JUMPDEST \l1c4: SWAP1 \l1c5: PUSH1 0x0\l1c7: MSTORE \l1c8: PUSH1 0x20\l1ca: PUSH1 0x0\l1cc: SHA3 \l1cd: SWAP1 \l1ce: PUSH1 0x3\l1d0: MUL \l1d1: ADD \l1d2: SWAP1 \l1d3: POP \l1d4: PUSH1 0x0\l1d6: DUP2 \l1d7: PUSH1 0x2\l1d9: ADD \l1da: PUSH1 0x0\l1dc: PUSH2 0x100\l1df: EXP \l1e0: DUP2 \l1e1: SLOAD \l1e2: DUP2 \l1e3: PUSH1 0xff\l1e5: MUL \l1e6: NOT \l1e7: AND \l1e8: SWAP1 \l1e9: DUP4 \l1ea: PUSH1 0x0\l1ec: DUP2 \l1ed: GT \l1ee: ISZERO \l1ef: PUSH2 0x1f4\l1f2: JUMPI \l"]
		block_1f3 [label="1f3: INVALID \l"]
		block_1f4 [label="1f4: JUMPDEST \l1f5: MUL \l1f6: OR \l1f7: SWAP1 \l1f8: SSTORE \l1f9: POP \l1fa: DUP1 \l1fb: PUSH1 0x0\l1fd: ADD \l1fe: PUSH1 0x0\l200: SWAP1 \l201: SLOAD \l202: SWAP1 \l203: PUSH2 0x100\l206: EXP \l207: SWAP1 \l208: DIV \l209: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l21e: AND \l21f: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l234: AND \l235: PUSH8 0xde0b6b3a7640000\l23e: DUP3 \l23f: PUSH1 0x1\l241: ADD \l242: SLOAD \l243: MUL \l244: DUP4 \l245: PUSH1 0x40\l247: MLOAD \l248: DUP1 \l249: DUP3 \l24a: DUP1 \l24b: MLOAD \l24c: SWAP1 \l24d: PUSH1 0x20\l24f: ADD \l250: SWAP1 \l251: DUP1 \l252: DUP4 \l253: DUP4 \l254: PUSH1 0x0\l"]
		block_256 [label="256: JUMPDEST \l257: DUP4 \l258: DUP2 \l259: LT \l25a: ISZERO \l25b: PUSH2 0x271\l25e: JUMPI \l"]
		block_25f [label="25f: DUP1 \l260: DUP3 \l261: ADD \l262: MLOAD \l263: DUP2 \l264: DUP5 \l265: ADD \l266: MSTORE \l267: PUSH1 0x20\l269: DUP2 \l26a: ADD \l26b: SWAP1 \l26c: POP \l26d: PUSH2 0x256\l270: JUMP \l"]
		block_271 [label="271: JUMPDEST \l272: POP \l273: POP \l274: POP \l275: POP \l276: SWAP1 \l277: POP \l278: SWAP1 \l279: DUP2 \l27a: ADD \l27b: SWAP1 \l27c: PUSH1 0x1f\l27e: AND \l27f: DUP1 \l280: ISZERO \l281: PUSH2 0x29e\l284: JUMPI \l"]
		block_285 [label="285: DUP1 \l286: DUP3 \l287: SUB \l288: DUP1 \l289: MLOAD \l28a: PUSH1 0x1\l28c: DUP4 \l28d: PUSH1 0x20\l28f: SUB \l290: PUSH2 0x100\l293: EXP \l294: SUB \l295: NOT \l296: AND \l297: DUP2 \l298: MSTORE \l299: PUSH1 0x20\l29b: ADD \l29c: SWAP2 \l29d: POP \l"]
		block_29e [label="29e: JUMPDEST \l29f: POP \l2a0: SWAP2 \l2a1: POP \l2a2: POP \l2a3: PUSH1 0x0\l2a5: PUSH1 0x40\l2a7: MLOAD \l2a8: DUP1 \l2a9: DUP4 \l2aa: SUB \l2ab: DUP2 \l2ac: DUP6 \l2ad: DUP8 \l2ae: GAS \l2af: CALL \l2b0: SWAP3 \l2b1: POP \l2b2: POP \l2b3: POP \l2b4: ISZERO \l2b5: ISZERO \l2b6: PUSH2 0x2be\l2b9: JUMPI \l"]
		block_2ba [label="2ba: PUSH1 0x0\l2bc: DUP1 \l2bd: REVERT \l"]
		block_2be [label="2be: JUMPDEST \l2bf: POP \l2c0: POP \l2c1: POP \l2c2: JUMP \l"]
		block_2c3 [label="2c3: STOP \l"]
	}
	block_1c3 -> block_1f3 [color=red]
	block_d -> block_41 [color=red]
	block_1c3 -> block_1f4 [color=green]
	block_51 -> block_5d [color=green]
	block_14d -> block_15b [color=red]
	block_285 -> block_29e [color=cyan]
	block_41 -> block_4c [color=red]
	block_14d -> block_15c [color=green]
	block_2be -> block_14b [color=blue]
	block_1b3 -> block_1c3 [color=green]
	block_7c -> block_c4 [color=green]
	block_0 -> block_4c [color=green]
	block_7c -> block_c3 [color=red]
	block_41 -> block_da [color=green]
	block_1f4 -> block_256 [color=cyan]
	block_25f -> block_256 [color=blue]
	block_271 -> block_285 [color=red]
	block_256 -> block_25f [color=red]
	block_e6 -> block_1b3 [color=blue]
	block_29e -> block_2ba [color=red]
	block_1b3 -> block_1c2 [color=red]
	block_256 -> block_271 [color=green]
	block_29e -> block_2be [color=green]
	block_51 -> block_59 [color=red]
	block_0 -> block_d [color=red]
	block_5d -> block_14d [color=blue]
	block_15c -> block_7c [color=blue]
	block_d -> block_51 [color=green]
	block_271 -> block_29e [color=green]
	block_da -> block_e6 [color=green]
	block_da -> block_e2 [color=red]
}
