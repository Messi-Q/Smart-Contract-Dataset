digraph "graph.cfg.gv" {
	subgraph global {
		node [fontname=Courier fontsize=30.0 rank=same shape=box]
		block_0 [label="0: PUSH1 0x80\l2: PUSH1 0x40\l4: MSTORE \l5: PUSH1 0x4\l7: CALLDATASIZE \l8: LT \l9: PUSH2 0x56\lc: JUMPI \l"]
		block_d [label="d: PUSH1 0x0\lf: CALLDATALOAD \l10: PUSH29 0x100000000000000000000000000000000000000000000000000000000\l2e: SWAP1 \l2f: DIV \l30: PUSH4 0xffffffff\l35: AND \l36: DUP1 \l37: PUSH3 0x821de3\l3b: EQ \l3c: PUSH2 0x5b\l3f: JUMPI \l"]
		block_40 [label="40: DUP1 \l41: PUSH4 0x6b9f96ea\l46: EQ \l47: PUSH2 0xb2\l4a: JUMPI \l"]
		block_4b [label="4b: DUP1 \l4c: PUSH4 0x8da5cb5b\l51: EQ \l52: PUSH2 0xc9\l55: JUMPI \l"]
		block_56 [label="56: JUMPDEST \l57: PUSH1 0x0\l59: DUP1 \l5a: REVERT \l"]
		block_5b [label="5b: JUMPDEST \l5c: CALLVALUE \l5d: DUP1 \l5e: ISZERO \l5f: PUSH2 0x67\l62: JUMPI \l"]
		block_63 [label="63: PUSH1 0x0\l65: DUP1 \l66: REVERT \l"]
		block_67 [label="67: JUMPDEST \l68: POP \l69: PUSH2 0x70\l6c: PUSH2 0x120\l6f: JUMP \l"]
		block_70 [label="70: JUMPDEST \l71: PUSH1 0x40\l73: MLOAD \l74: DUP1 \l75: DUP3 \l76: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l8b: AND \l8c: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\la1: AND \la2: DUP2 \la3: MSTORE \la4: PUSH1 0x20\la6: ADD \la7: SWAP2 \la8: POP \la9: POP \laa: PUSH1 0x40\lac: MLOAD \lad: DUP1 \lae: SWAP2 \laf: SUB \lb0: SWAP1 \lb1: RETURN \l"]
		block_b2 [label="b2: JUMPDEST \lb3: CALLVALUE \lb4: DUP1 \lb5: ISZERO \lb6: PUSH2 0xbe\lb9: JUMPI \l"]
		block_ba [label="ba: PUSH1 0x0\lbc: DUP1 \lbd: REVERT \l"]
		block_be [label="be: JUMPDEST \lbf: POP \lc0: PUSH2 0xc7\lc3: PUSH2 0x145\lc6: JUMP \l"]
		block_c7 [label="c7: JUMPDEST \lc8: STOP \l"]
		block_c9 [label="c9: JUMPDEST \lca: CALLVALUE \lcb: DUP1 \lcc: ISZERO \lcd: PUSH2 0xd5\ld0: JUMPI \l"]
		block_d1 [label="d1: PUSH1 0x0\ld3: DUP1 \ld4: REVERT \l"]
		block_d5 [label="d5: JUMPDEST \ld6: POP \ld7: PUSH2 0xde\lda: PUSH2 0x212\ldd: JUMP \l"]
		block_de [label="de: JUMPDEST \ldf: PUSH1 0x40\le1: MLOAD \le2: DUP1 \le3: DUP3 \le4: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\lf9: AND \lfa: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l10f: AND \l110: DUP2 \l111: MSTORE \l112: PUSH1 0x20\l114: ADD \l115: SWAP2 \l116: POP \l117: POP \l118: PUSH1 0x40\l11a: MLOAD \l11b: DUP1 \l11c: SWAP2 \l11d: SUB \l11e: SWAP1 \l11f: RETURN \l"]
		block_120 [label="120: JUMPDEST \l121: PUSH1 0x0\l123: DUP1 \l124: SWAP1 \l125: SLOAD \l126: SWAP1 \l127: PUSH2 0x100\l12a: EXP \l12b: SWAP1 \l12c: DIV \l12d: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l142: AND \l143: DUP2 \l144: JUMP \l"]
		block_145 [label="145: JUMPDEST \l146: PUSH1 0x1\l148: PUSH1 0x0\l14a: SWAP1 \l14b: SLOAD \l14c: SWAP1 \l14d: PUSH2 0x100\l150: EXP \l151: SWAP1 \l152: DIV \l153: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l168: AND \l169: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l17e: AND \l17f: CALLER \l180: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l195: AND \l196: EQ \l197: ISZERO \l198: ISZERO \l199: PUSH2 0x1a1\l19c: JUMPI \l"]
		block_19d [label="19d: PUSH1 0x0\l19f: DUP1 \l1a0: REVERT \l"]
		block_1a1 [label="1a1: JUMPDEST \l1a2: PUSH1 0x0\l1a4: DUP1 \l1a5: SWAP1 \l1a6: SLOAD \l1a7: SWAP1 \l1a8: PUSH2 0x100\l1ab: EXP \l1ac: SWAP1 \l1ad: DIV \l1ae: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l1c3: AND \l1c4: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l1d9: AND \l1da: ADDRESS \l1db: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l1f0: AND \l1f1: BALANCE \l1f2: PUSH1 0x40\l1f4: MLOAD \l1f5: PUSH1 0x0\l1f7: PUSH1 0x40\l1f9: MLOAD \l1fa: DUP1 \l1fb: DUP4 \l1fc: SUB \l1fd: DUP2 \l1fe: DUP6 \l1ff: DUP8 \l200: GAS \l201: CALL \l202: SWAP3 \l203: POP \l204: POP \l205: POP \l206: ISZERO \l207: ISZERO \l208: PUSH2 0x210\l20b: JUMPI \l"]
		block_20c [label="20c: PUSH1 0x0\l20e: DUP1 \l20f: REVERT \l"]
		block_210 [label="210: JUMPDEST \l211: JUMP \l"]
		block_212 [label="212: JUMPDEST \l213: PUSH1 0x1\l215: PUSH1 0x0\l217: SWAP1 \l218: SLOAD \l219: SWAP1 \l21a: PUSH2 0x100\l21d: EXP \l21e: SWAP1 \l21f: DIV \l220: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l235: AND \l236: DUP2 \l237: JUMP \l"]
		block_238 [label="238: STOP \l"]
	}
	block_40 -> block_b2 [color=green]
	block_b2 -> block_ba [color=red]
	block_120 -> block_70 [color=blue]
	block_40 -> block_4b [color=red]
	block_212 -> block_de [color=blue]
	block_b2 -> block_be [color=green]
	block_67 -> block_120 [color=blue]
	block_d5 -> block_212 [color=blue]
	block_d -> block_5b [color=green]
	block_5b -> block_67 [color=green]
	block_145 -> block_19d [color=red]
	block_1a1 -> block_210 [color=green]
	block_5b -> block_63 [color=red]
	block_0 -> block_56 [color=green]
	block_d -> block_40 [color=red]
	block_c9 -> block_d5 [color=green]
	block_be -> block_145 [color=blue]
	block_4b -> block_c9 [color=green]
	block_210 -> block_c7 [color=blue]
	block_0 -> block_d [color=red]
	block_145 -> block_1a1 [color=green]
	block_c9 -> block_d1 [color=red]
	block_4b -> block_56 [color=red]
	block_1a1 -> block_20c [color=red]
}
