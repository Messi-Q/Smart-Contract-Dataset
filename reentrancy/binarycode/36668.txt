digraph "graph.cfg.gv" {
	subgraph global {
		node [fontname=Courier fontsize=30.0 rank=same shape=box]
		block_0 [label="0: PUSH1 0x80\l2: PUSH1 0x40\l4: MSTORE \l5: PUSH1 0x4\l7: CALLDATASIZE \l8: LT \l9: PUSH2 0x57\lc: JUMPI \l"]
		block_d [label="d: PUSH1 0x0\lf: CALLDATALOAD \l10: PUSH29 0x100000000000000000000000000000000000000000000000000000000\l2e: SWAP1 \l2f: DIV \l30: PUSH4 0xffffffff\l35: AND \l36: DUP1 \l37: PUSH4 0x2d05d3f\l3c: EQ \l3d: PUSH2 0x5c\l40: JUMPI \l"]
		block_41 [label="41: DUP1 \l42: PUSH4 0x67e404ce\l47: EQ \l48: PUSH2 0xb3\l4b: JUMPI \l"]
		block_4c [label="4c: DUP1 \l4d: PUSH4 0xb61d27f6\l52: EQ \l53: PUSH2 0x10a\l56: JUMPI \l"]
		block_57 [label="57: JUMPDEST \l58: PUSH1 0x0\l5a: DUP1 \l5b: REVERT \l"]
		block_5c [label="5c: JUMPDEST \l5d: CALLVALUE \l5e: DUP1 \l5f: ISZERO \l60: PUSH2 0x68\l63: JUMPI \l"]
		block_64 [label="64: PUSH1 0x0\l66: DUP1 \l67: REVERT \l"]
		block_68 [label="68: JUMPDEST \l69: POP \l6a: PUSH2 0x71\l6d: PUSH2 0x16f\l70: JUMP \l"]
		block_71 [label="71: JUMPDEST \l72: PUSH1 0x40\l74: MLOAD \l75: DUP1 \l76: DUP3 \l77: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l8c: AND \l8d: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\la2: AND \la3: DUP2 \la4: MSTORE \la5: PUSH1 0x20\la7: ADD \la8: SWAP2 \la9: POP \laa: POP \lab: PUSH1 0x40\lad: MLOAD \lae: DUP1 \laf: SWAP2 \lb0: SUB \lb1: SWAP1 \lb2: RETURN \l"]
		block_b3 [label="b3: JUMPDEST \lb4: CALLVALUE \lb5: DUP1 \lb6: ISZERO \lb7: PUSH2 0xbf\lba: JUMPI \l"]
		block_bb [label="bb: PUSH1 0x0\lbd: DUP1 \lbe: REVERT \l"]
		block_bf [label="bf: JUMPDEST \lc0: POP \lc1: PUSH2 0xc8\lc4: PUSH2 0x195\lc7: JUMP \l"]
		block_c8 [label="c8: JUMPDEST \lc9: PUSH1 0x40\lcb: MLOAD \lcc: DUP1 \lcd: DUP3 \lce: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\le3: AND \le4: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\lf9: AND \lfa: DUP2 \lfb: MSTORE \lfc: PUSH1 0x20\lfe: ADD \lff: SWAP2 \l100: POP \l101: POP \l102: PUSH1 0x40\l104: MLOAD \l105: DUP1 \l106: SWAP2 \l107: SUB \l108: SWAP1 \l109: RETURN \l"]
		block_10a [label="10a: JUMPDEST \l10b: CALLVALUE \l10c: DUP1 \l10d: ISZERO \l10e: PUSH2 0x116\l111: JUMPI \l"]
		block_112 [label="112: PUSH1 0x0\l114: DUP1 \l115: REVERT \l"]
		block_116 [label="116: JUMPDEST \l117: POP \l118: PUSH2 0x16d\l11b: PUSH1 0x4\l11d: DUP1 \l11e: CALLDATASIZE \l11f: SUB \l120: DUP2 \l121: ADD \l122: SWAP1 \l123: DUP1 \l124: DUP1 \l125: CALLDATALOAD \l126: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l13b: AND \l13c: SWAP1 \l13d: PUSH1 0x20\l13f: ADD \l140: SWAP1 \l141: SWAP3 \l142: SWAP2 \l143: SWAP1 \l144: DUP1 \l145: CALLDATALOAD \l146: SWAP1 \l147: PUSH1 0x20\l149: ADD \l14a: SWAP1 \l14b: SWAP3 \l14c: SWAP2 \l14d: SWAP1 \l14e: DUP1 \l14f: CALLDATALOAD \l150: SWAP1 \l151: PUSH1 0x20\l153: ADD \l154: SWAP1 \l155: DUP3 \l156: ADD \l157: DUP1 \l158: CALLDATALOAD \l159: SWAP1 \l15a: PUSH1 0x20\l15c: ADD \l15d: SWAP2 \l15e: SWAP1 \l15f: SWAP2 \l160: SWAP3 \l161: SWAP4 \l162: SWAP2 \l163: SWAP3 \l164: SWAP4 \l165: SWAP1 \l166: POP \l167: POP \l168: POP \l169: PUSH2 0x1ba\l16c: JUMP \l"]
		block_16d [label="16d: JUMPDEST \l16e: STOP \l"]
		block_16f [label="16f: JUMPDEST \l170: PUSH1 0x1\l172: PUSH1 0x0\l174: SWAP1 \l175: SLOAD \l176: SWAP1 \l177: PUSH2 0x100\l17a: EXP \l17b: SWAP1 \l17c: DIV \l17d: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l192: AND \l193: DUP2 \l194: JUMP \l"]
		block_195 [label="195: JUMPDEST \l196: PUSH1 0x0\l198: DUP1 \l199: SWAP1 \l19a: SLOAD \l19b: SWAP1 \l19c: PUSH2 0x100\l19f: EXP \l1a0: SWAP1 \l1a1: DIV \l1a2: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l1b7: AND \l1b8: DUP2 \l1b9: JUMP \l"]
		block_1ba [label="1ba: JUMPDEST \l1bb: PUSH1 0x1\l1bd: PUSH1 0x0\l1bf: SWAP1 \l1c0: SLOAD \l1c1: SWAP1 \l1c2: PUSH2 0x100\l1c5: EXP \l1c6: SWAP1 \l1c7: DIV \l1c8: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l1dd: AND \l1de: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l1f3: AND \l1f4: CALLER \l1f5: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l20a: AND \l20b: EQ \l20c: ISZERO \l20d: ISZERO \l20e: PUSH2 0x216\l211: JUMPI \l"]
		block_212 [label="212: PUSH1 0x0\l214: DUP1 \l215: REVERT \l"]
		block_216 [label="216: JUMPDEST \l217: DUP4 \l218: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l22d: AND \l22e: DUP4 \l22f: DUP4 \l230: DUP4 \l231: PUSH1 0x40\l233: MLOAD \l234: DUP1 \l235: DUP4 \l236: DUP4 \l237: DUP1 \l238: DUP3 \l239: DUP5 \l23a: CALLDATACOPY \l23b: DUP3 \l23c: ADD \l23d: SWAP2 \l23e: POP \l23f: POP \l240: SWAP3 \l241: POP \l242: POP \l243: POP \l244: PUSH1 0x0\l246: PUSH1 0x40\l248: MLOAD \l249: DUP1 \l24a: DUP4 \l24b: SUB \l24c: DUP2 \l24d: DUP6 \l24e: DUP8 \l24f: GAS \l250: CALL \l251: SWAP3 \l252: POP \l253: POP \l254: POP \l255: ISZERO \l256: ISZERO \l257: PUSH2 0x25f\l25a: JUMPI \l"]
		block_25b [label="25b: PUSH1 0x0\l25d: DUP1 \l25e: REVERT \l"]
		block_25f [label="25f: JUMPDEST \l260: POP \l261: POP \l262: POP \l263: POP \l264: JUMP \l"]
		block_265 [label="265: STOP \l"]
	}
	block_d -> block_41 [color=red]
	block_5c -> block_64 [color=red]
	block_1ba -> block_216 [color=green]
	block_25f -> block_16d [color=blue]
	block_41 -> block_b3 [color=green]
	block_d -> block_5c [color=green]
	block_bf -> block_195 [color=blue]
	block_41 -> block_4c [color=red]
	block_0 -> block_57 [color=green]
	block_216 -> block_25b [color=red]
	block_16f -> block_71 [color=blue]
	block_10a -> block_116 [color=green]
	block_10a -> block_112 [color=red]
	block_b3 -> block_bf [color=green]
	block_1ba -> block_212 [color=red]
	block_4c -> block_57 [color=red]
	block_116 -> block_1ba [color=blue]
	block_68 -> block_16f [color=blue]
	block_4c -> block_10a [color=green]
	block_0 -> block_d [color=red]
	block_5c -> block_68 [color=green]
	block_b3 -> block_bb [color=red]
	block_195 -> block_c8 [color=blue]
	block_216 -> block_25f [color=green]
}
