digraph "graph.cfg.gv" {
	subgraph global {
		node [fontname=Courier fontsize=30.0 rank=same shape=box]
		block_0 [label="0: PUSH1 0x80\l2: PUSH1 0x40\l4: MSTORE \l5: PUSH1 0x4\l7: CALLDATASIZE \l8: LT \l9: PUSH2 0x57\lc: JUMPI \l"]
		block_d [label="d: PUSH1 0x0\lf: CALLDATALOAD \l10: PUSH29 0x100000000000000000000000000000000000000000000000000000000\l2e: SWAP1 \l2f: DIV \l30: PUSH4 0xffffffff\l35: AND \l36: DUP1 \l37: PUSH4 0x8da5cb5b\l3c: EQ \l3d: PUSH2 0x5c\l40: JUMPI \l"]
		block_41 [label="41: DUP1 \l42: PUSH4 0xc6038ee4\l47: EQ \l48: PUSH2 0xb3\l4b: JUMPI \l"]
		block_4c [label="4c: DUP1 \l4d: PUSH4 0xf0c6923f\l52: EQ \l53: PUSH2 0x100\l56: JUMPI \l"]
		block_57 [label="57: JUMPDEST \l58: PUSH1 0x0\l5a: DUP1 \l5b: REVERT \l"]
		block_5c [label="5c: JUMPDEST \l5d: CALLVALUE \l5e: DUP1 \l5f: ISZERO \l60: PUSH2 0x68\l63: JUMPI \l"]
		block_64 [label="64: PUSH1 0x0\l66: DUP1 \l67: REVERT \l"]
		block_68 [label="68: JUMPDEST \l69: POP \l6a: PUSH2 0x71\l6d: PUSH2 0x13b\l70: JUMP \l"]
		block_71 [label="71: JUMPDEST \l72: PUSH1 0x40\l74: MLOAD \l75: DUP1 \l76: DUP3 \l77: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l8c: AND \l8d: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\la2: AND \la3: DUP2 \la4: MSTORE \la5: PUSH1 0x20\la7: ADD \la8: SWAP2 \la9: POP \laa: POP \lab: PUSH1 0x40\lad: MLOAD \lae: DUP1 \laf: SWAP2 \lb0: SUB \lb1: SWAP1 \lb2: RETURN \l"]
		block_b3 [label="b3: JUMPDEST \lb4: CALLVALUE \lb5: DUP1 \lb6: ISZERO \lb7: PUSH2 0xbf\lba: JUMPI \l"]
		block_bb [label="bb: PUSH1 0x0\lbd: DUP1 \lbe: REVERT \l"]
		block_bf [label="bf: JUMPDEST \lc0: POP \lc1: PUSH2 0xfe\lc4: PUSH1 0x4\lc6: DUP1 \lc7: CALLDATASIZE \lc8: SUB \lc9: DUP2 \lca: ADD \lcb: SWAP1 \lcc: DUP1 \lcd: DUP1 \lce: CALLDATALOAD \lcf: SWAP1 \ld0: PUSH1 0x20\ld2: ADD \ld3: SWAP1 \ld4: SWAP3 \ld5: SWAP2 \ld6: SWAP1 \ld7: DUP1 \ld8: CALLDATALOAD \ld9: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\lee: AND \lef: SWAP1 \lf0: PUSH1 0x20\lf2: ADD \lf3: SWAP1 \lf4: SWAP3 \lf5: SWAP2 \lf6: SWAP1 \lf7: POP \lf8: POP \lf9: POP \lfa: PUSH2 0x160\lfd: JUMP \l"]
		block_fe [label="fe: JUMPDEST \lff: STOP \l"]
		block_100 [label="100: JUMPDEST \l101: CALLVALUE \l102: DUP1 \l103: ISZERO \l104: PUSH2 0x10c\l107: JUMPI \l"]
		block_108 [label="108: PUSH1 0x0\l10a: DUP1 \l10b: REVERT \l"]
		block_10c [label="10c: JUMPDEST \l10d: POP \l10e: PUSH2 0x139\l111: PUSH1 0x4\l113: DUP1 \l114: CALLDATASIZE \l115: SUB \l116: DUP2 \l117: ADD \l118: SWAP1 \l119: DUP1 \l11a: DUP1 \l11b: CALLDATALOAD \l11c: SWAP1 \l11d: PUSH1 0x20\l11f: ADD \l120: SWAP1 \l121: SWAP3 \l122: SWAP2 \l123: SWAP1 \l124: DUP1 \l125: CALLDATALOAD \l126: PUSH1 0x0\l128: NOT \l129: AND \l12a: SWAP1 \l12b: PUSH1 0x20\l12d: ADD \l12e: SWAP1 \l12f: SWAP3 \l130: SWAP2 \l131: SWAP1 \l132: POP \l133: POP \l134: POP \l135: PUSH2 0x211\l138: JUMP \l"]
		block_139 [label="139: JUMPDEST \l13a: STOP \l"]
		block_13b [label="13b: JUMPDEST \l13c: PUSH1 0x0\l13e: DUP1 \l13f: SWAP1 \l140: SLOAD \l141: SWAP1 \l142: PUSH2 0x100\l145: EXP \l146: SWAP1 \l147: DIV \l148: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l15d: AND \l15e: DUP2 \l15f: JUMP \l"]
		block_160 [label="160: JUMPDEST \l161: CALLER \l162: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l177: AND \l178: PUSH1 0x0\l17a: DUP1 \l17b: SWAP1 \l17c: SLOAD \l17d: SWAP1 \l17e: PUSH2 0x100\l181: EXP \l182: SWAP1 \l183: DIV \l184: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l199: AND \l19a: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l1af: AND \l1b0: EQ \l1b1: ISZERO \l1b2: ISZERO \l1b3: PUSH2 0x1bb\l1b6: JUMPI \l"]
		block_1b7 [label="1b7: PUSH1 0x0\l1b9: DUP1 \l1ba: REVERT \l"]
		block_1bb [label="1bb: JUMPDEST \l1bc: DUP1 \l1bd: PUSH1 0x1\l1bf: PUSH1 0x0\l1c1: DUP5 \l1c2: DUP2 \l1c3: MSTORE \l1c4: PUSH1 0x20\l1c6: ADD \l1c7: SWAP1 \l1c8: DUP2 \l1c9: MSTORE \l1ca: PUSH1 0x20\l1cc: ADD \l1cd: PUSH1 0x0\l1cf: SHA3 \l1d0: PUSH1 0x0\l1d2: PUSH2 0x100\l1d5: EXP \l1d6: DUP2 \l1d7: SLOAD \l1d8: DUP2 \l1d9: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l1ee: MUL \l1ef: NOT \l1f0: AND \l1f1: SWAP1 \l1f2: DUP4 \l1f3: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l208: AND \l209: MUL \l20a: OR \l20b: SWAP1 \l20c: SSTORE \l20d: POP \l20e: POP \l20f: POP \l210: JUMP \l"]
		block_211 [label="211: JUMPDEST \l212: PUSH1 0x1\l214: PUSH1 0x0\l216: DUP4 \l217: DUP2 \l218: MSTORE \l219: PUSH1 0x20\l21b: ADD \l21c: SWAP1 \l21d: DUP2 \l21e: MSTORE \l21f: PUSH1 0x20\l221: ADD \l222: PUSH1 0x0\l224: SHA3 \l225: PUSH1 0x0\l227: SWAP1 \l228: SLOAD \l229: SWAP1 \l22a: PUSH2 0x100\l22d: EXP \l22e: SWAP1 \l22f: DIV \l230: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l245: AND \l246: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l25b: AND \l25c: DUP2 \l25d: PUSH1 0x40\l25f: MLOAD \l260: DUP1 \l261: DUP3 \l262: PUSH1 0x0\l264: NOT \l265: AND \l266: PUSH1 0x0\l268: NOT \l269: AND \l26a: DUP2 \l26b: MSTORE \l26c: PUSH1 0x20\l26e: ADD \l26f: SWAP2 \l270: POP \l271: POP \l272: PUSH1 0x0\l274: PUSH1 0x40\l276: MLOAD \l277: DUP1 \l278: DUP4 \l279: SUB \l27a: DUP2 \l27b: DUP6 \l27c: GAS \l27d: DELEGATECALL \l27e: SWAP2 \l27f: POP \l280: POP \l281: POP \l282: POP \l283: POP \l284: JUMP \l"]
		block_285 [label="285: STOP \l"]
	}
	block_100 -> block_108 [color=red]
	block_10c -> block_211 [color=blue]
	block_211 -> block_139 [color=blue]
	block_5c -> block_68 [color=green]
	block_0 -> block_d [color=red]
	block_41 -> block_b3 [color=green]
	block_4c -> block_57 [color=red]
	block_160 -> block_1bb [color=green]
	block_b3 -> block_bf [color=green]
	block_68 -> block_13b [color=blue]
	block_41 -> block_4c [color=red]
	block_0 -> block_57 [color=green]
	block_d -> block_5c [color=green]
	block_13b -> block_71 [color=blue]
	block_100 -> block_10c [color=green]
	block_b3 -> block_bb [color=red]
	block_d -> block_41 [color=red]
	block_160 -> block_1b7 [color=red]
	block_bf -> block_160 [color=blue]
	block_4c -> block_100 [color=green]
	block_5c -> block_64 [color=red]
	block_1bb -> block_fe [color=blue]
}
