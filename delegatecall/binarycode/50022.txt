digraph "graph.cfg.gv" {
	subgraph global {
		node [fontname=Courier fontsize=30.0 rank=same shape=box]
		block_0 [label="0: PUSH1 0x80\l2: PUSH1 0x40\l4: MSTORE \l5: PUSH1 0x4\l7: CALLDATASIZE \l8: LT \l9: PUSH2 0x62\lc: JUMPI \l"]
		block_d [label="d: PUSH1 0x0\lf: CALLDATALOAD \l10: PUSH29 0x100000000000000000000000000000000000000000000000000000000\l2e: SWAP1 \l2f: DIV \l30: PUSH4 0xffffffff\l35: AND \l36: DUP1 \l37: PUSH4 0xa3b0a4f\l3c: EQ \l3d: PUSH2 0x67\l40: JUMPI \l"]
		block_41 [label="41: DUP1 \l42: PUSH4 0x82ab5a91\l47: EQ \l48: PUSH2 0xaa\l4b: JUMPI \l"]
		block_4c [label="4c: DUP1 \l4d: PUSH4 0x8da5cb5b\l52: EQ \l53: PUSH2 0xc1\l56: JUMPI \l"]
		block_57 [label="57: DUP1 \l58: PUSH4 0xce9b7930\l5d: EQ \l5e: PUSH2 0x118\l61: JUMPI \l"]
		block_62 [label="62: JUMPDEST \l63: PUSH1 0x0\l65: DUP1 \l66: REVERT \l"]
		block_67 [label="67: JUMPDEST \l68: CALLVALUE \l69: DUP1 \l6a: ISZERO \l6b: PUSH2 0x73\l6e: JUMPI \l"]
		block_6f [label="6f: PUSH1 0x0\l71: DUP1 \l72: REVERT \l"]
		block_73 [label="73: JUMPDEST \l74: POP \l75: PUSH2 0xa8\l78: PUSH1 0x4\l7a: DUP1 \l7b: CALLDATASIZE \l7c: SUB \l7d: DUP2 \l7e: ADD \l7f: SWAP1 \l80: DUP1 \l81: DUP1 \l82: CALLDATALOAD \l83: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l98: AND \l99: SWAP1 \l9a: PUSH1 0x20\l9c: ADD \l9d: SWAP1 \l9e: SWAP3 \l9f: SWAP2 \la0: SWAP1 \la1: POP \la2: POP \la3: POP \la4: PUSH2 0x16f\la7: JUMP \l"]
		block_a8 [label="a8: JUMPDEST \la9: STOP \l"]
		block_aa [label="aa: JUMPDEST \lab: CALLVALUE \lac: DUP1 \lad: ISZERO \lae: PUSH2 0xb6\lb1: JUMPI \l"]
		block_b2 [label="b2: PUSH1 0x0\lb4: DUP1 \lb5: REVERT \l"]
		block_b6 [label="b6: JUMPDEST \lb7: POP \lb8: PUSH2 0xbf\lbb: PUSH2 0x20e\lbe: JUMP \l"]
		block_bf [label="bf: JUMPDEST \lc0: STOP \l"]
		block_c1 [label="c1: JUMPDEST \lc2: CALLVALUE \lc3: DUP1 \lc4: ISZERO \lc5: PUSH2 0xcd\lc8: JUMPI \l"]
		block_c9 [label="c9: PUSH1 0x0\lcb: DUP1 \lcc: REVERT \l"]
		block_cd [label="cd: JUMPDEST \lce: POP \lcf: PUSH2 0xd6\ld2: PUSH2 0x2f1\ld5: JUMP \l"]
		block_d6 [label="d6: JUMPDEST \ld7: PUSH1 0x40\ld9: MLOAD \lda: DUP1 \ldb: DUP3 \ldc: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\lf1: AND \lf2: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l107: AND \l108: DUP2 \l109: MSTORE \l10a: PUSH1 0x20\l10c: ADD \l10d: SWAP2 \l10e: POP \l10f: POP \l110: PUSH1 0x40\l112: MLOAD \l113: DUP1 \l114: SWAP2 \l115: SUB \l116: SWAP1 \l117: RETURN \l"]
		block_118 [label="118: JUMPDEST \l119: CALLVALUE \l11a: DUP1 \l11b: ISZERO \l11c: PUSH2 0x124\l11f: JUMPI \l"]
		block_120 [label="120: PUSH1 0x0\l122: DUP1 \l123: REVERT \l"]
		block_124 [label="124: JUMPDEST \l125: POP \l126: PUSH2 0x12d\l129: PUSH2 0x316\l12c: JUMP \l"]
		block_12d [label="12d: JUMPDEST \l12e: PUSH1 0x40\l130: MLOAD \l131: DUP1 \l132: DUP3 \l133: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l148: AND \l149: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l15e: AND \l15f: DUP2 \l160: MSTORE \l161: PUSH1 0x20\l163: ADD \l164: SWAP2 \l165: POP \l166: POP \l167: PUSH1 0x40\l169: MLOAD \l16a: DUP1 \l16b: SWAP2 \l16c: SUB \l16d: SWAP1 \l16e: RETURN \l"]
		block_16f [label="16f: JUMPDEST \l170: CALLER \l171: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l186: AND \l187: PUSH1 0x0\l189: DUP1 \l18a: SWAP1 \l18b: SLOAD \l18c: SWAP1 \l18d: PUSH2 0x100\l190: EXP \l191: SWAP1 \l192: DIV \l193: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l1a8: AND \l1a9: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l1be: AND \l1bf: EQ \l1c0: ISZERO \l1c1: ISZERO \l1c2: PUSH2 0x1ca\l1c5: JUMPI \l"]
		block_1c6 [label="1c6: PUSH1 0x0\l1c8: DUP1 \l1c9: REVERT \l"]
		block_1ca [label="1ca: JUMPDEST \l1cb: DUP1 \l1cc: PUSH1 0x1\l1ce: PUSH1 0x0\l1d0: PUSH2 0x100\l1d3: EXP \l1d4: DUP2 \l1d5: SLOAD \l1d6: DUP2 \l1d7: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l1ec: MUL \l1ed: NOT \l1ee: AND \l1ef: SWAP1 \l1f0: DUP4 \l1f1: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l206: AND \l207: MUL \l208: OR \l209: SWAP1 \l20a: SSTORE \l20b: POP \l20c: POP \l20d: JUMP \l"]
		block_20e [label="20e: JUMPDEST \l20f: PUSH1 0x60\l211: PUSH1 0x0\l213: CALLDATASIZE \l214: DUP1 \l215: DUP1 \l216: PUSH1 0x1f\l218: ADD \l219: PUSH1 0x20\l21b: DUP1 \l21c: SWAP2 \l21d: DIV \l21e: MUL \l21f: PUSH1 0x20\l221: ADD \l222: PUSH1 0x40\l224: MLOAD \l225: SWAP1 \l226: DUP2 \l227: ADD \l228: PUSH1 0x40\l22a: MSTORE \l22b: DUP1 \l22c: SWAP4 \l22d: SWAP3 \l22e: SWAP2 \l22f: SWAP1 \l230: DUP2 \l231: DUP2 \l232: MSTORE \l233: PUSH1 0x20\l235: ADD \l236: DUP4 \l237: DUP4 \l238: DUP1 \l239: DUP3 \l23a: DUP5 \l23b: CALLDATACOPY \l23c: DUP3 \l23d: ADD \l23e: SWAP2 \l23f: POP \l240: POP \l241: POP \l242: POP \l243: POP \l244: POP \l245: SWAP1 \l246: POP \l247: PUSH1 0x1\l249: PUSH1 0x0\l24b: SWAP1 \l24c: SLOAD \l24d: SWAP1 \l24e: PUSH2 0x100\l251: EXP \l252: SWAP1 \l253: DIV \l254: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l269: AND \l26a: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l27f: AND \l280: DUP2 \l281: PUSH1 0x40\l283: MLOAD \l284: DUP1 \l285: DUP3 \l286: DUP1 \l287: MLOAD \l288: SWAP1 \l289: PUSH1 0x20\l28b: ADD \l28c: SWAP1 \l28d: DUP1 \l28e: DUP4 \l28f: DUP4 \l290: PUSH1 0x0\l"]
		block_292 [label="292: JUMPDEST \l293: DUP4 \l294: DUP2 \l295: LT \l296: ISZERO \l297: PUSH2 0x2ad\l29a: JUMPI \l"]
		block_29b [label="29b: DUP1 \l29c: DUP3 \l29d: ADD \l29e: MLOAD \l29f: DUP2 \l2a0: DUP5 \l2a1: ADD \l2a2: MSTORE \l2a3: PUSH1 0x20\l2a5: DUP2 \l2a6: ADD \l2a7: SWAP1 \l2a8: POP \l2a9: PUSH2 0x292\l2ac: JUMP \l"]
		block_2ad [label="2ad: JUMPDEST \l2ae: POP \l2af: POP \l2b0: POP \l2b1: POP \l2b2: SWAP1 \l2b3: POP \l2b4: SWAP1 \l2b5: DUP2 \l2b6: ADD \l2b7: SWAP1 \l2b8: PUSH1 0x1f\l2ba: AND \l2bb: DUP1 \l2bc: ISZERO \l2bd: PUSH2 0x2da\l2c0: JUMPI \l"]
		block_2c1 [label="2c1: DUP1 \l2c2: DUP3 \l2c3: SUB \l2c4: DUP1 \l2c5: MLOAD \l2c6: PUSH1 0x1\l2c8: DUP4 \l2c9: PUSH1 0x20\l2cb: SUB \l2cc: PUSH2 0x100\l2cf: EXP \l2d0: SUB \l2d1: NOT \l2d2: AND \l2d3: DUP2 \l2d4: MSTORE \l2d5: PUSH1 0x20\l2d7: ADD \l2d8: SWAP2 \l2d9: POP \l"]
		block_2da [label="2da: JUMPDEST \l2db: POP \l2dc: SWAP2 \l2dd: POP \l2de: POP \l2df: PUSH1 0x0\l2e1: PUSH1 0x40\l2e3: MLOAD \l2e4: DUP1 \l2e5: DUP4 \l2e6: SUB \l2e7: DUP2 \l2e8: DUP6 \l2e9: GAS \l2ea: DELEGATECALL \l2eb: SWAP2 \l2ec: POP \l2ed: POP \l2ee: POP \l2ef: POP \l2f0: JUMP \l"]
		block_2f1 [label="2f1: JUMPDEST \l2f2: PUSH1 0x0\l2f4: DUP1 \l2f5: SWAP1 \l2f6: SLOAD \l2f7: SWAP1 \l2f8: PUSH2 0x100\l2fb: EXP \l2fc: SWAP1 \l2fd: DIV \l2fe: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l313: AND \l314: DUP2 \l315: JUMP \l"]
		block_316 [label="316: JUMPDEST \l317: PUSH1 0x1\l319: PUSH1 0x0\l31b: SWAP1 \l31c: SLOAD \l31d: SWAP1 \l31e: PUSH2 0x100\l321: EXP \l322: SWAP1 \l323: DIV \l324: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l339: AND \l33a: DUP2 \l33b: JUMP \l"]
		block_33c [label="33c: STOP \l"]
	}
	block_118 -> block_120 [color=red]
	block_292 -> block_2ad [color=green]
	block_73 -> block_16f [color=blue]
	block_16f -> block_1ca [color=green]
	block_118 -> block_124 [color=green]
	block_0 -> block_d [color=red]
	block_4c -> block_57 [color=red]
	block_57 -> block_118 [color=green]
	block_2c1 -> block_2da [color=cyan]
	block_16f -> block_1c6 [color=red]
	block_57 -> block_62 [color=red]
	block_2da -> block_bf [color=blue]
	block_67 -> block_6f [color=red]
	block_d -> block_67 [color=green]
	block_41 -> block_4c [color=red]
	block_20e -> block_292 [color=cyan]
	block_c1 -> block_c9 [color=red]
	block_67 -> block_73 [color=green]
	block_0 -> block_62 [color=green]
	block_d -> block_41 [color=red]
	block_124 -> block_316 [color=blue]
	block_1ca -> block_a8 [color=blue]
	block_4c -> block_c1 [color=green]
	block_cd -> block_2f1 [color=blue]
	block_aa -> block_b6 [color=green]
	block_292 -> block_29b [color=red]
	block_b6 -> block_20e [color=blue]
	block_aa -> block_b2 [color=red]
	block_41 -> block_aa [color=green]
	block_c1 -> block_cd [color=green]
	block_2f1 -> block_d6 [color=blue]
	block_29b -> block_292 [color=blue]
	block_2ad -> block_2da [color=green]
	block_2ad -> block_2c1 [color=red]
	block_316 -> block_12d [color=blue]
}
