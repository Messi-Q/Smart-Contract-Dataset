digraph "graph.cfg.gv" {
	subgraph global {
		node [fontname=Courier fontsize=30.0 rank=same shape=box]
		block_0 [label="0: PUSH1 0x80\l2: PUSH1 0x40\l4: MSTORE \l5: PUSH1 0x4\l7: CALLDATASIZE \l8: LT \l9: PUSH2 0x4c\lc: JUMPI \l"]
		block_d [label="d: PUSH1 0x0\lf: CALLDATALOAD \l10: PUSH29 0x100000000000000000000000000000000000000000000000000000000\l2e: SWAP1 \l2f: DIV \l30: PUSH4 0xffffffff\l35: AND \l36: DUP1 \l37: PUSH4 0x8da5cb5b\l3c: EQ \l3d: PUSH2 0x51\l40: JUMPI \l"]
		block_41 [label="41: DUP1 \l42: PUSH4 0xac68e52b\l47: EQ \l48: PUSH2 0xa8\l4b: JUMPI \l"]
		block_4c [label="4c: JUMPDEST \l4d: PUSH1 0x0\l4f: DUP1 \l50: REVERT \l"]
		block_51 [label="51: JUMPDEST \l52: CALLVALUE \l53: DUP1 \l54: ISZERO \l55: PUSH2 0x5d\l58: JUMPI \l"]
		block_59 [label="59: PUSH1 0x0\l5b: DUP1 \l5c: REVERT \l"]
		block_5d [label="5d: JUMPDEST \l5e: POP \l5f: PUSH2 0x66\l62: PUSH2 0xeb\l65: JUMP \l"]
		block_66 [label="66: JUMPDEST \l67: PUSH1 0x40\l69: MLOAD \l6a: DUP1 \l6b: DUP3 \l6c: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l81: AND \l82: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l97: AND \l98: DUP2 \l99: MSTORE \l9a: PUSH1 0x20\l9c: ADD \l9d: SWAP2 \l9e: POP \l9f: POP \la0: PUSH1 0x40\la2: MLOAD \la3: DUP1 \la4: SWAP2 \la5: SUB \la6: SWAP1 \la7: RETURN \l"]
		block_a8 [label="a8: JUMPDEST \la9: CALLVALUE \laa: DUP1 \lab: ISZERO \lac: PUSH2 0xb4\laf: JUMPI \l"]
		block_b0 [label="b0: PUSH1 0x0\lb2: DUP1 \lb3: REVERT \l"]
		block_b4 [label="b4: JUMPDEST \lb5: POP \lb6: PUSH2 0xe9\lb9: PUSH1 0x4\lbb: DUP1 \lbc: CALLDATASIZE \lbd: SUB \lbe: DUP2 \lbf: ADD \lc0: SWAP1 \lc1: DUP1 \lc2: DUP1 \lc3: CALLDATALOAD \lc4: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\ld9: AND \lda: SWAP1 \ldb: PUSH1 0x20\ldd: ADD \lde: SWAP1 \ldf: SWAP3 \le0: SWAP2 \le1: SWAP1 \le2: POP \le3: POP \le4: POP \le5: PUSH2 0x110\le8: JUMP \l"]
		block_e9 [label="e9: JUMPDEST \lea: STOP \l"]
		block_eb [label="eb: JUMPDEST \lec: PUSH1 0x0\lee: DUP1 \lef: SWAP1 \lf0: SLOAD \lf1: SWAP1 \lf2: PUSH2 0x100\lf5: EXP \lf6: SWAP1 \lf7: DIV \lf8: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l10d: AND \l10e: DUP2 \l10f: JUMP \l"]
		block_110 [label="110: JUMPDEST \l111: PUSH1 0x60\l113: CALLER \l114: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l129: AND \l12a: PUSH1 0x0\l12c: DUP1 \l12d: SWAP1 \l12e: SLOAD \l12f: SWAP1 \l130: PUSH2 0x100\l133: EXP \l134: SWAP1 \l135: DIV \l136: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l14b: AND \l14c: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l161: AND \l162: EQ \l163: ISZERO \l164: ISZERO \l165: PUSH2 0x16d\l168: JUMPI \l"]
		block_169 [label="169: PUSH1 0x0\l16b: DUP1 \l16c: REVERT \l"]
		block_16d [label="16d: JUMPDEST \l16e: PUSH1 0x0\l170: CALLDATASIZE \l171: DUP1 \l172: DUP1 \l173: PUSH1 0x1f\l175: ADD \l176: PUSH1 0x20\l178: DUP1 \l179: SWAP2 \l17a: DIV \l17b: MUL \l17c: PUSH1 0x20\l17e: ADD \l17f: PUSH1 0x40\l181: MLOAD \l182: SWAP1 \l183: DUP2 \l184: ADD \l185: PUSH1 0x40\l187: MSTORE \l188: DUP1 \l189: SWAP4 \l18a: SWAP3 \l18b: SWAP2 \l18c: SWAP1 \l18d: DUP2 \l18e: DUP2 \l18f: MSTORE \l190: PUSH1 0x20\l192: ADD \l193: DUP4 \l194: DUP4 \l195: DUP1 \l196: DUP3 \l197: DUP5 \l198: CALLDATACOPY \l199: DUP3 \l19a: ADD \l19b: SWAP2 \l19c: POP \l19d: POP \l19e: POP \l19f: POP \l1a0: POP \l1a1: POP \l1a2: SWAP1 \l1a3: POP \l1a4: DUP2 \l1a5: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l1ba: AND \l1bb: DUP2 \l1bc: PUSH1 0x40\l1be: MLOAD \l1bf: DUP1 \l1c0: DUP3 \l1c1: DUP1 \l1c2: MLOAD \l1c3: SWAP1 \l1c4: PUSH1 0x20\l1c6: ADD \l1c7: SWAP1 \l1c8: DUP1 \l1c9: DUP4 \l1ca: DUP4 \l1cb: PUSH1 0x0\l"]
		block_1cd [label="1cd: JUMPDEST \l1ce: DUP4 \l1cf: DUP2 \l1d0: LT \l1d1: ISZERO \l1d2: PUSH2 0x1e8\l1d5: JUMPI \l"]
		block_1d6 [label="1d6: DUP1 \l1d7: DUP3 \l1d8: ADD \l1d9: MLOAD \l1da: DUP2 \l1db: DUP5 \l1dc: ADD \l1dd: MSTORE \l1de: PUSH1 0x20\l1e0: DUP2 \l1e1: ADD \l1e2: SWAP1 \l1e3: POP \l1e4: PUSH2 0x1cd\l1e7: JUMP \l"]
		block_1e8 [label="1e8: JUMPDEST \l1e9: POP \l1ea: POP \l1eb: POP \l1ec: POP \l1ed: SWAP1 \l1ee: POP \l1ef: SWAP1 \l1f0: DUP2 \l1f1: ADD \l1f2: SWAP1 \l1f3: PUSH1 0x1f\l1f5: AND \l1f6: DUP1 \l1f7: ISZERO \l1f8: PUSH2 0x215\l1fb: JUMPI \l"]
		block_1fc [label="1fc: DUP1 \l1fd: DUP3 \l1fe: SUB \l1ff: DUP1 \l200: MLOAD \l201: PUSH1 0x1\l203: DUP4 \l204: PUSH1 0x20\l206: SUB \l207: PUSH2 0x100\l20a: EXP \l20b: SUB \l20c: NOT \l20d: AND \l20e: DUP2 \l20f: MSTORE \l210: PUSH1 0x20\l212: ADD \l213: SWAP2 \l214: POP \l"]
		block_215 [label="215: JUMPDEST \l216: POP \l217: SWAP2 \l218: POP \l219: POP \l21a: PUSH1 0x0\l21c: PUSH1 0x40\l21e: MLOAD \l21f: DUP1 \l220: DUP4 \l221: SUB \l222: DUP2 \l223: DUP6 \l224: GAS \l225: DELEGATECALL \l226: SWAP2 \l227: POP \l228: POP \l229: POP \l22a: POP \l22b: POP \l22c: JUMP \l"]
		block_22d [label="22d: STOP \l"]
	}
	block_1fc -> block_215 [color=cyan]
	block_0 -> block_d [color=red]
	block_d -> block_51 [color=green]
	block_b4 -> block_110 [color=blue]
	block_1e8 -> block_215 [color=green]
	block_110 -> block_169 [color=red]
	block_1e8 -> block_1fc [color=red]
	block_41 -> block_4c [color=red]
	block_41 -> block_a8 [color=green]
	block_215 -> block_e9 [color=blue]
	block_110 -> block_16d [color=green]
	block_51 -> block_5d [color=green]
	block_51 -> block_59 [color=red]
	block_d -> block_41 [color=red]
	block_1cd -> block_1d6 [color=red]
	block_5d -> block_eb [color=blue]
	block_1d6 -> block_1cd [color=blue]
	block_0 -> block_4c [color=green]
	block_eb -> block_66 [color=blue]
	block_a8 -> block_b4 [color=green]
	block_a8 -> block_b0 [color=red]
	block_16d -> block_1cd [color=cyan]
	block_1cd -> block_1e8 [color=green]
}
