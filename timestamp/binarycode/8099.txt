digraph "graph.cfg.gv" {
	subgraph global {
		node [fontname=Courier fontsize=30.0 rank=same shape=box]
		block_0 [label="0: PUSH1 0x80\l2: PUSH1 0x40\l4: MSTORE \l5: PUSH1 0x4\l7: CALLDATASIZE \l8: LT \l9: PUSH2 0x41\lc: JUMPI \l"]
		block_d [label="d: PUSH1 0x0\lf: CALLDATALOAD \l10: PUSH29 0x100000000000000000000000000000000000000000000000000000000\l2e: SWAP1 \l2f: DIV \l30: PUSH4 0xffffffff\l35: AND \l36: DUP1 \l37: PUSH4 0x23b872dd\l3c: EQ \l3d: PUSH2 0x46\l40: JUMPI \l"]
		block_41 [label="41: JUMPDEST \l42: PUSH1 0x0\l44: DUP1 \l45: REVERT \l"]
		block_46 [label="46: JUMPDEST \l47: CALLVALUE \l48: DUP1 \l49: ISZERO \l4a: PUSH2 0x52\l4d: JUMPI \l"]
		block_4e [label="4e: PUSH1 0x0\l50: DUP1 \l51: REVERT \l"]
		block_52 [label="52: JUMPDEST \l53: POP \l54: PUSH2 0xb1\l57: PUSH1 0x4\l59: DUP1 \l5a: CALLDATASIZE \l5b: SUB \l5c: DUP2 \l5d: ADD \l5e: SWAP1 \l5f: DUP1 \l60: DUP1 \l61: CALLDATALOAD \l62: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l77: AND \l78: SWAP1 \l79: PUSH1 0x20\l7b: ADD \l7c: SWAP1 \l7d: SWAP3 \l7e: SWAP2 \l7f: SWAP1 \l80: DUP1 \l81: CALLDATALOAD \l82: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l97: AND \l98: SWAP1 \l99: PUSH1 0x20\l9b: ADD \l9c: SWAP1 \l9d: SWAP3 \l9e: SWAP2 \l9f: SWAP1 \la0: DUP1 \la1: CALLDATALOAD \la2: SWAP1 \la3: PUSH1 0x20\la5: ADD \la6: SWAP1 \la7: SWAP3 \la8: SWAP2 \la9: SWAP1 \laa: POP \lab: POP \lac: POP \lad: PUSH2 0xcb\lb0: JUMP \l"]
		block_b1 [label="b1: JUMPDEST \lb2: PUSH1 0x40\lb4: MLOAD \lb5: DUP1 \lb6: DUP3 \lb7: ISZERO \lb8: ISZERO \lb9: ISZERO \lba: ISZERO \lbb: DUP2 \lbc: MSTORE \lbd: PUSH1 0x20\lbf: ADD \lc0: SWAP2 \lc1: POP \lc2: POP \lc3: PUSH1 0x40\lc5: MLOAD \lc6: DUP1 \lc7: SWAP2 \lc8: SUB \lc9: SWAP1 \lca: RETURN \l"]
		block_cb [label="cb: JUMPDEST \lcc: PUSH1 0x0\lce: DUP1 \lcf: TIMESTAMP \ld0: SWAP1 \ld1: POP \ld2: PUSH1 0x1\ld4: PUSH1 0x0\ld6: DUP7 \ld7: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\lec: AND \led: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l102: AND \l103: DUP2 \l104: MSTORE \l105: PUSH1 0x20\l107: ADD \l108: SWAP1 \l109: DUP2 \l10a: MSTORE \l10b: PUSH1 0x20\l10d: ADD \l10e: PUSH1 0x0\l110: SHA3 \l111: PUSH1 0x40\l113: DUP1 \l114: MLOAD \l115: SWAP1 \l116: DUP2 \l117: ADD \l118: PUSH1 0x40\l11a: MSTORE \l11b: DUP1 \l11c: PUSH1 0x0\l11e: DUP1 \l11f: DUP10 \l120: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l135: AND \l136: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l14b: AND \l14c: DUP2 \l14d: MSTORE \l14e: PUSH1 0x20\l150: ADD \l151: SWAP1 \l152: DUP2 \l153: MSTORE \l154: PUSH1 0x20\l156: ADD \l157: PUSH1 0x0\l159: SHA3 \l15a: SLOAD \l15b: DUP2 \l15c: MSTORE \l15d: PUSH1 0x20\l15f: ADD \l160: DUP4 \l161: PUSH8 0xffffffffffffffff\l16a: AND \l16b: DUP2 \l16c: MSTORE \l16d: POP \l16e: SWAP1 \l16f: DUP1 \l170: PUSH1 0x1\l172: DUP2 \l173: SLOAD \l174: ADD \l175: DUP1 \l176: DUP3 \l177: SSTORE \l178: DUP1 \l179: SWAP2 \l17a: POP \l17b: POP \l17c: SWAP1 \l17d: PUSH1 0x1\l17f: DUP3 \l180: SUB \l181: SWAP1 \l182: PUSH1 0x0\l184: MSTORE \l185: PUSH1 0x20\l187: PUSH1 0x0\l189: SHA3 \l18a: SWAP1 \l18b: PUSH1 0x2\l18d: MUL \l18e: ADD \l18f: PUSH1 0x0\l191: SWAP1 \l192: SWAP2 \l193: SWAP3 \l194: SWAP1 \l195: SWAP2 \l196: SWAP1 \l197: SWAP2 \l198: POP \l199: PUSH1 0x0\l19b: DUP3 \l19c: ADD \l19d: MLOAD \l19e: DUP2 \l19f: PUSH1 0x0\l1a1: ADD \l1a2: SSTORE \l1a3: PUSH1 0x20\l1a5: DUP3 \l1a6: ADD \l1a7: MLOAD \l1a8: DUP2 \l1a9: PUSH1 0x1\l1ab: ADD \l1ac: PUSH1 0x0\l1ae: PUSH2 0x100\l1b1: EXP \l1b2: DUP2 \l1b3: SLOAD \l1b4: DUP2 \l1b5: PUSH8 0xffffffffffffffff\l1be: MUL \l1bf: NOT \l1c0: AND \l1c1: SWAP1 \l1c2: DUP4 \l1c3: PUSH8 0xffffffffffffffff\l1cc: AND \l1cd: MUL \l1ce: OR \l1cf: SWAP1 \l1d0: SSTORE \l1d1: POP \l1d2: POP \l1d3: POP \l1d4: POP \l1d5: PUSH1 0x1\l1d7: PUSH1 0x0\l1d9: DUP6 \l1da: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l1ef: AND \l1f0: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l205: AND \l206: DUP2 \l207: MSTORE \l208: PUSH1 0x20\l20a: ADD \l20b: SWAP1 \l20c: DUP2 \l20d: MSTORE \l20e: PUSH1 0x20\l210: ADD \l211: PUSH1 0x0\l213: SHA3 \l214: PUSH1 0x40\l216: DUP1 \l217: MLOAD \l218: SWAP1 \l219: DUP2 \l21a: ADD \l21b: PUSH1 0x40\l21d: MSTORE \l21e: DUP1 \l21f: DUP6 \l220: DUP2 \l221: MSTORE \l222: PUSH1 0x20\l224: ADD \l225: DUP4 \l226: PUSH8 0xffffffffffffffff\l22f: AND \l230: DUP2 \l231: MSTORE \l232: POP \l233: SWAP1 \l234: DUP1 \l235: PUSH1 0x1\l237: DUP2 \l238: SLOAD \l239: ADD \l23a: DUP1 \l23b: DUP3 \l23c: SSTORE \l23d: DUP1 \l23e: SWAP2 \l23f: POP \l240: POP \l241: SWAP1 \l242: PUSH1 0x1\l244: DUP3 \l245: SUB \l246: SWAP1 \l247: PUSH1 0x0\l249: MSTORE \l24a: PUSH1 0x20\l24c: PUSH1 0x0\l24e: SHA3 \l24f: SWAP1 \l250: PUSH1 0x2\l252: MUL \l253: ADD \l254: PUSH1 0x0\l256: SWAP1 \l257: SWAP2 \l258: SWAP3 \l259: SWAP1 \l25a: SWAP2 \l25b: SWAP1 \l25c: SWAP2 \l25d: POP \l25e: PUSH1 0x0\l260: DUP3 \l261: ADD \l262: MLOAD \l263: DUP2 \l264: PUSH1 0x0\l266: ADD \l267: SSTORE \l268: PUSH1 0x20\l26a: DUP3 \l26b: ADD \l26c: MLOAD \l26d: DUP2 \l26e: PUSH1 0x1\l270: ADD \l271: PUSH1 0x0\l273: PUSH2 0x100\l276: EXP \l277: DUP2 \l278: SLOAD \l279: DUP2 \l27a: PUSH8 0xffffffffffffffff\l283: MUL \l284: NOT \l285: AND \l286: SWAP1 \l287: DUP4 \l288: PUSH8 0xffffffffffffffff\l291: AND \l292: MUL \l293: OR \l294: SWAP1 \l295: SSTORE \l296: POP \l297: POP \l298: POP \l299: POP \l29a: PUSH1 0x1\l29c: SWAP2 \l29d: POP \l29e: POP \l29f: SWAP4 \l2a0: SWAP3 \l2a1: POP \l2a2: POP \l2a3: POP \l2a4: JUMP \l"]
		block_2a5 [label="2a5: STOP \l"]
	}
	block_0 -> block_d [color=red]
	block_d -> block_41 [color=red]
	block_46 -> block_52 [color=green]
	block_d -> block_46 [color=green]
	block_cb -> block_b1 [color=blue]
	block_0 -> block_41 [color=green]
	block_52 -> block_cb [color=blue]
	block_46 -> block_4e [color=red]
}
