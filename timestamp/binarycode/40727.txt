digraph "graph.cfg.gv" {
	subgraph global {
		node [fontname=Courier fontsize=30.0 rank=same shape=box]
		block_0 [label="0: PUSH1 0x80\l2: PUSH1 0x40\l4: MSTORE \l5: PUSH1 0x0\l7: DUP1 \l8: PUSH1 0x0\la: PUSH7 0x2386f26fc10000\l12: CALLVALUE \l13: LT \l14: ISZERO \l15: ISZERO \l16: PUSH2 0x1e5\l19: JUMPI \l"]
		block_1a [label="1a: PUSH1 0x3\l1c: COINBASE \l1d: NUMBER \l1e: TIMESTAMP \l1f: PUSH1 0x40\l21: MLOAD \l22: DUP1 \l23: DUP5 \l24: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l39: AND \l3a: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l4f: AND \l50: PUSH13 0x1000000000000000000000000\l5e: MUL \l5f: DUP2 \l60: MSTORE \l61: PUSH1 0x14\l63: ADD \l64: DUP4 \l65: DUP2 \l66: MSTORE \l67: PUSH1 0x20\l69: ADD \l6a: DUP3 \l6b: DUP2 \l6c: MSTORE \l6d: PUSH1 0x20\l6f: ADD \l70: SWAP4 \l71: POP \l72: POP \l73: POP \l74: POP \l75: PUSH1 0x20\l77: PUSH1 0x40\l79: MLOAD \l7a: DUP1 \l7b: DUP4 \l7c: SUB \l7d: DUP2 \l7e: PUSH1 0x0\l80: DUP7 \l81: GAS \l82: CALL \l83: ISZERO \l84: DUP1 \l85: ISZERO \l86: PUSH2 0x93\l89: JUMPI \l"]
		block_8a [label="8a: RETURNDATASIZE \l8b: PUSH1 0x0\l8d: DUP1 \l8e: RETURNDATACOPY \l8f: RETURNDATASIZE \l90: PUSH1 0x0\l92: REVERT \l"]
		block_93 [label="93: JUMPDEST \l94: POP \l95: POP \l96: POP \l97: PUSH1 0x40\l99: MLOAD \l9a: MLOAD \l9b: PUSH13 0x1000000000000000000000000\la9: MUL \laa: SWAP3 \lab: POP \lac: PUSH1 0x0\lae: PUSH32 0x100000000000000000000000000000000000000000000000000000000000000\lcf: MUL \ld0: DUP4 \ld1: PUSH1 0x0\ld3: PUSH1 0x14\ld5: DUP2 \ld6: LT \ld7: ISZERO \ld8: ISZERO \ld9: PUSH2 0xde\ldc: JUMPI \l"]
		block_dd [label="dd: INVALID \l"]
		block_de [label="de: JUMPDEST \ldf: BYTE \le0: PUSH32 0x100000000000000000000000000000000000000000000000000000000000000\l101: MUL \l102: PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\l122: NOT \l123: AND \l124: EQ \l125: ISZERO \l126: PUSH2 0x1e4\l129: JUMPI \l"]
		block_12a [label="12a: PUSH1 0x0\l12c: PUSH32 0x100000000000000000000000000000000000000000000000000000000000000\l14d: MUL \l14e: PUSH1 0x1\l150: PUSH32 0x100000000000000000000000000000000000000000000000000000000000000\l171: MUL \l172: DUP5 \l173: PUSH1 0x1\l175: PUSH1 0x14\l177: DUP2 \l178: LT \l179: ISZERO \l17a: ISZERO \l17b: PUSH2 0x180\l17e: JUMPI \l"]
		block_17f [label="17f: INVALID \l"]
		block_180 [label="180: JUMPDEST \l181: BYTE \l182: PUSH32 0x100000000000000000000000000000000000000000000000000000000000000\l1a3: MUL \l1a4: AND \l1a5: PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\l1c5: NOT \l1c6: AND \l1c7: EQ \l1c8: ISZERO \l1c9: PUSH2 0x1d3\l1cc: JUMPI \l"]
		block_1cd [label="1cd: PUSH1 0x0\l1cf: PUSH2 0x1d6\l1d2: JUMP \l"]
		block_1d3 [label="1d3: JUMPDEST \l1d4: PUSH1 0x1\l"]
		block_1d6 [label="1d6: JUMPDEST \l1d7: SWAP2 \l1d8: POP \l1d9: DUP2 \l1da: PUSH1 0xff\l1dc: AND \l1dd: PUSH1 0x64\l1df: CALLVALUE \l1e0: MUL \l1e1: MUL \l1e2: SWAP1 \l1e3: POP \l"]
		block_1e4 [label="1e4: JUMPDEST \l"]
		block_1e5 [label="1e5: JUMPDEST \l1e6: POP \l1e7: POP \l1e8: POP \l1e9: STOP \l"]
		block_1ea [label="1ea: STOP \l"]
	}
	block_12a -> block_180 [color=green]
	block_de -> block_1e4 [color=green]
	block_93 -> block_de [color=green]
	block_1a -> block_8a [color=red]
	block_de -> block_12a [color=red]
	block_0 -> block_1a [color=red]
	block_1a -> block_93 [color=green]
	block_180 -> block_1d3 [color=green]
	block_0 -> block_1e5 [color=green]
	block_1cd -> block_1d6 [color=blue]
	block_180 -> block_1cd [color=red]
	block_1e4 -> block_1e5 [color=cyan]
	block_1d3 -> block_1d6 [color=cyan]
	block_12a -> block_17f [color=red]
	block_1d6 -> block_1e4 [color=cyan]
	block_93 -> block_dd [color=red]
}
