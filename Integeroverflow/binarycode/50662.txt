digraph "graph.cfg.gv" {
	subgraph global {
		node [fontname=Courier fontsize=30.0 rank=same shape=box]
		block_0 [label="0: PUSH1 0x80\l2: PUSH1 0x40\l4: MSTORE \l5: PUSH1 0x4\l7: CALLDATASIZE \l8: LT \l9: PUSH2 0x4c\lc: JUMPI \l"]
		block_d [label="d: PUSH1 0x0\lf: CALLDATALOAD \l10: PUSH29 0x100000000000000000000000000000000000000000000000000000000\l2e: SWAP1 \l2f: DIV \l30: PUSH4 0xffffffff\l35: AND \l36: DUP1 \l37: PUSH4 0x70a08231\l3c: EQ \l3d: PUSH2 0x51\l40: JUMPI \l"]
		block_41 [label="41: DUP1 \l42: PUSH4 0xbe45fd62\l47: EQ \l48: PUSH2 0xa8\l4b: JUMPI \l"]
		block_4c [label="4c: JUMPDEST \l4d: PUSH1 0x0\l4f: DUP1 \l50: REVERT \l"]
		block_51 [label="51: JUMPDEST \l52: CALLVALUE \l53: DUP1 \l54: ISZERO \l55: PUSH2 0x5d\l58: JUMPI \l"]
		block_59 [label="59: PUSH1 0x0\l5b: DUP1 \l5c: REVERT \l"]
		block_5d [label="5d: JUMPDEST \l5e: POP \l5f: PUSH2 0x92\l62: PUSH1 0x4\l64: DUP1 \l65: CALLDATASIZE \l66: SUB \l67: DUP2 \l68: ADD \l69: SWAP1 \l6a: DUP1 \l6b: DUP1 \l6c: CALLDATALOAD \l6d: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l82: AND \l83: SWAP1 \l84: PUSH1 0x20\l86: ADD \l87: SWAP1 \l88: SWAP3 \l89: SWAP2 \l8a: SWAP1 \l8b: POP \l8c: POP \l8d: POP \l8e: PUSH2 0x153\l91: JUMP \l"]
		block_92 [label="92: JUMPDEST \l93: PUSH1 0x40\l95: MLOAD \l96: DUP1 \l97: DUP3 \l98: DUP2 \l99: MSTORE \l9a: PUSH1 0x20\l9c: ADD \l9d: SWAP2 \l9e: POP \l9f: POP \la0: PUSH1 0x40\la2: MLOAD \la3: DUP1 \la4: SWAP2 \la5: SUB \la6: SWAP1 \la7: RETURN \l"]
		block_a8 [label="a8: JUMPDEST \la9: CALLVALUE \laa: DUP1 \lab: ISZERO \lac: PUSH2 0xb4\laf: JUMPI \l"]
		block_b0 [label="b0: PUSH1 0x0\lb2: DUP1 \lb3: REVERT \l"]
		block_b4 [label="b4: JUMPDEST \lb5: POP \lb6: PUSH2 0x139\lb9: PUSH1 0x4\lbb: DUP1 \lbc: CALLDATASIZE \lbd: SUB \lbe: DUP2 \lbf: ADD \lc0: SWAP1 \lc1: DUP1 \lc2: DUP1 \lc3: CALLDATALOAD \lc4: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\ld9: AND \lda: SWAP1 \ldb: PUSH1 0x20\ldd: ADD \lde: SWAP1 \ldf: SWAP3 \le0: SWAP2 \le1: SWAP1 \le2: DUP1 \le3: CALLDATALOAD \le4: SWAP1 \le5: PUSH1 0x20\le7: ADD \le8: SWAP1 \le9: SWAP3 \lea: SWAP2 \leb: SWAP1 \lec: DUP1 \led: CALLDATALOAD \lee: SWAP1 \lef: PUSH1 0x20\lf1: ADD \lf2: SWAP1 \lf3: DUP3 \lf4: ADD \lf5: DUP1 \lf6: CALLDATALOAD \lf7: SWAP1 \lf8: PUSH1 0x20\lfa: ADD \lfb: SWAP1 \lfc: DUP1 \lfd: DUP1 \lfe: PUSH1 0x1f\l100: ADD \l101: PUSH1 0x20\l103: DUP1 \l104: SWAP2 \l105: DIV \l106: MUL \l107: PUSH1 0x20\l109: ADD \l10a: PUSH1 0x40\l10c: MLOAD \l10d: SWAP1 \l10e: DUP2 \l10f: ADD \l110: PUSH1 0x40\l112: MSTORE \l113: DUP1 \l114: SWAP4 \l115: SWAP3 \l116: SWAP2 \l117: SWAP1 \l118: DUP2 \l119: DUP2 \l11a: MSTORE \l11b: PUSH1 0x20\l11d: ADD \l11e: DUP4 \l11f: DUP4 \l120: DUP1 \l121: DUP3 \l122: DUP5 \l123: CALLDATACOPY \l124: DUP3 \l125: ADD \l126: SWAP2 \l127: POP \l128: POP \l129: POP \l12a: POP \l12b: POP \l12c: POP \l12d: SWAP2 \l12e: SWAP3 \l12f: SWAP2 \l130: SWAP3 \l131: SWAP1 \l132: POP \l133: POP \l134: POP \l135: PUSH2 0x16b\l138: JUMP \l"]
		block_139 [label="139: JUMPDEST \l13a: PUSH1 0x40\l13c: MLOAD \l13d: DUP1 \l13e: DUP3 \l13f: ISZERO \l140: ISZERO \l141: ISZERO \l142: ISZERO \l143: DUP2 \l144: MSTORE \l145: PUSH1 0x20\l147: ADD \l148: SWAP2 \l149: POP \l14a: POP \l14b: PUSH1 0x40\l14d: MLOAD \l14e: DUP1 \l14f: SWAP2 \l150: SUB \l151: SWAP1 \l152: RETURN \l"]
		block_153 [label="153: JUMPDEST \l154: PUSH1 0x0\l156: PUSH1 0x20\l158: MSTORE \l159: DUP1 \l15a: PUSH1 0x0\l15c: MSTORE \l15d: PUSH1 0x40\l15f: PUSH1 0x0\l161: SHA3 \l162: PUSH1 0x0\l164: SWAP2 \l165: POP \l166: SWAP1 \l167: POP \l168: SLOAD \l169: DUP2 \l16a: JUMP \l"]
		block_16b [label="16b: JUMPDEST \l16c: PUSH1 0x0\l16e: DUP3 \l16f: PUSH1 0x0\l171: DUP1 \l172: CALLER \l173: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l188: AND \l189: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l19e: AND \l19f: DUP2 \l1a0: MSTORE \l1a1: PUSH1 0x20\l1a3: ADD \l1a4: SWAP1 \l1a5: DUP2 \l1a6: MSTORE \l1a7: PUSH1 0x20\l1a9: ADD \l1aa: PUSH1 0x0\l1ac: SHA3 \l1ad: SLOAD \l1ae: LT \l1af: ISZERO \l1b0: ISZERO \l1b1: ISZERO \l1b2: PUSH2 0x1ba\l1b5: JUMPI \l"]
		block_1b6 [label="1b6: PUSH1 0x0\l1b8: DUP1 \l1b9: REVERT \l"]
		block_1ba [label="1ba: JUMPDEST \l1bb: PUSH2 0x20b\l1be: DUP4 \l1bf: PUSH1 0x0\l1c1: DUP1 \l1c2: CALLER \l1c3: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l1d8: AND \l1d9: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l1ee: AND \l1ef: DUP2 \l1f0: MSTORE \l1f1: PUSH1 0x20\l1f3: ADD \l1f4: SWAP1 \l1f5: DUP2 \l1f6: MSTORE \l1f7: PUSH1 0x20\l1f9: ADD \l1fa: PUSH1 0x0\l1fc: SHA3 \l1fd: SLOAD \l1fe: PUSH2 0x320\l201: SWAP1 \l202: SWAP2 \l203: SWAP1 \l204: PUSH4 0xffffffff\l209: AND \l20a: JUMP \l"]
		block_20b [label="20b: JUMPDEST \l20c: PUSH1 0x0\l20e: DUP1 \l20f: CALLER \l210: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l225: AND \l226: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l23b: AND \l23c: DUP2 \l23d: MSTORE \l23e: PUSH1 0x20\l240: ADD \l241: SWAP1 \l242: DUP2 \l243: MSTORE \l244: PUSH1 0x20\l246: ADD \l247: PUSH1 0x0\l249: SHA3 \l24a: DUP2 \l24b: SWAP1 \l24c: SSTORE \l24d: POP \l24e: PUSH2 0x29e\l251: DUP4 \l252: PUSH1 0x0\l254: DUP1 \l255: DUP8 \l256: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l26b: AND \l26c: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l281: AND \l282: DUP2 \l283: MSTORE \l284: PUSH1 0x20\l286: ADD \l287: SWAP1 \l288: DUP2 \l289: MSTORE \l28a: PUSH1 0x20\l28c: ADD \l28d: PUSH1 0x0\l28f: SHA3 \l290: SLOAD \l291: PUSH2 0x339\l294: SWAP1 \l295: SWAP2 \l296: SWAP1 \l297: PUSH4 0xffffffff\l29c: AND \l29d: JUMP \l"]
		block_29e [label="29e: JUMPDEST \l29f: PUSH1 0x0\l2a1: DUP1 \l2a2: DUP7 \l2a3: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l2b8: AND \l2b9: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l2ce: AND \l2cf: DUP2 \l2d0: MSTORE \l2d1: PUSH1 0x20\l2d3: ADD \l2d4: SWAP1 \l2d5: DUP2 \l2d6: MSTORE \l2d7: PUSH1 0x20\l2d9: ADD \l2da: PUSH1 0x0\l2dc: SHA3 \l2dd: DUP2 \l2de: SWAP1 \l2df: SSTORE \l2e0: POP \l2e1: CALLER \l2e2: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\l2f7: AND \l2f8: PUSH1 0x0\l2fa: PUSH1 0x40\l2fc: MLOAD \l2fd: PUSH1 0x0\l2ff: PUSH1 0x40\l301: MLOAD \l302: DUP1 \l303: DUP4 \l304: SUB \l305: DUP2 \l306: DUP6 \l307: DUP8 \l308: GAS \l309: CALL \l30a: SWAP3 \l30b: POP \l30c: POP \l30d: POP \l30e: ISZERO \l30f: ISZERO \l310: PUSH2 0x315\l313: JUMPI \l"]
		block_314 [label="314: INVALID \l"]
		block_315 [label="315: JUMPDEST \l316: PUSH1 0x1\l318: SWAP1 \l319: POP \l31a: SWAP4 \l31b: SWAP3 \l31c: POP \l31d: POP \l31e: POP \l31f: JUMP \l"]
		block_320 [label="320: JUMPDEST \l321: PUSH1 0x0\l323: DUP3 \l324: DUP3 \l325: GT \l326: ISZERO \l327: ISZERO \l328: ISZERO \l329: PUSH2 0x32e\l32c: JUMPI \l"]
		block_32d [label="32d: INVALID \l"]
		block_32e [label="32e: JUMPDEST \l32f: DUP2 \l330: DUP4 \l331: SUB \l332: SWAP1 \l333: POP \l334: SWAP3 \l335: SWAP2 \l336: POP \l337: POP \l338: JUMP \l"]
		block_339 [label="339: JUMPDEST \l33a: PUSH1 0x0\l33c: DUP1 \l33d: DUP3 \l33e: DUP5 \l33f: ADD \l340: SWAP1 \l341: POP \l342: DUP4 \l343: DUP2 \l344: LT \l345: ISZERO \l346: ISZERO \l347: ISZERO \l348: PUSH2 0x34d\l34b: JUMPI \l"]
		block_34c [label="34c: INVALID \l"]
		block_34d [label="34d: JUMPDEST \l34e: DUP1 \l34f: SWAP2 \l350: POP \l351: POP \l352: SWAP3 \l353: SWAP2 \l354: POP \l355: POP \l356: JUMP \l"]
		block_357 [label="357: STOP \l"]
	}
	block_5d -> block_153 [color=blue]
	block_29e -> block_315 [color=green]
	block_16b -> block_1b6 [color=red]
	block_41 -> block_a8 [color=green]
	block_20b -> block_339 [color=blue]
	block_51 -> block_59 [color=red]
	block_1ba -> block_320 [color=blue]
	block_16b -> block_1ba [color=green]
	block_339 -> block_34c [color=red]
	block_29e -> block_314 [color=red]
	block_320 -> block_32d [color=red]
	block_a8 -> block_b4 [color=green]
	block_0 -> block_d [color=red]
	block_d -> block_51 [color=green]
	block_51 -> block_5d [color=green]
	block_0 -> block_4c [color=green]
	block_41 -> block_4c [color=red]
	block_320 -> block_32e [color=green]
	block_b4 -> block_16b [color=blue]
	block_32e -> block_20b [color=blue]
	block_153 -> block_92 [color=blue]
	block_34d -> block_29e [color=blue]
	block_d -> block_41 [color=red]
	block_339 -> block_34d [color=green]
	block_315 -> block_139 [color=blue]
	block_a8 -> block_b0 [color=red]
}
